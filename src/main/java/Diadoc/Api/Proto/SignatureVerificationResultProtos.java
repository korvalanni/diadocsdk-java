// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: SignatureVerificationResult.proto
// Protobuf Java Version: 4.28.1

package Diadoc.Api.Proto;

public final class SignatureVerificationResultProtos {
  private SignatureVerificationResultProtos() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 1,
      /* suffix= */ "",
      SignatureVerificationResultProtos.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SignatureVerificationResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.SignatureVerificationResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool IsValid = 1;</code>
     * @return Whether the isValid field is set.
     */
    boolean hasIsValid();
    /**
     * <code>required bool IsValid = 1;</code>
     * @return The isValid.
     */
    boolean getIsValid();

    /**
     * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
     * @return Whether the certificateStatus field is set.
     */
    boolean hasCertificateStatus();
    /**
     * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
     * @return The certificateStatus.
     */
    Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult getCertificateStatus();
    /**
     * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
     */
    Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder getCertificateStatusOrBuilder();

    /**
     * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
     * @return Whether the signatureTimestamp field is set.
     */
    boolean hasSignatureTimestamp();
    /**
     * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
     * @return The signatureTimestamp.
     */
    Diadoc.Api.Proto.TimestampProtos.Timestamp getSignatureTimestamp();
    /**
     * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
     */
    Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getSignatureTimestampOrBuilder();
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.SignatureVerificationResult}
   */
  public static final class SignatureVerificationResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.SignatureVerificationResult)
      SignatureVerificationResultOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        SignatureVerificationResult.class.getName());
    }
    // Use SignatureVerificationResult.newBuilder() to construct.
    private SignatureVerificationResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SignatureVerificationResult() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_SignatureVerificationResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_SignatureVerificationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.class, Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.Builder.class);
    }

    private int bitField0_;
    public static final int ISVALID_FIELD_NUMBER = 1;
    private boolean isValid_ = false;
    /**
     * <code>required bool IsValid = 1;</code>
     * @return Whether the isValid field is set.
     */
    @java.lang.Override
    public boolean hasIsValid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required bool IsValid = 1;</code>
     * @return The isValid.
     */
    @java.lang.Override
    public boolean getIsValid() {
      return isValid_;
    }

    public static final int CERTIFICATESTATUS_FIELD_NUMBER = 2;
    private Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult certificateStatus_;
    /**
     * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
     * @return Whether the certificateStatus field is set.
     */
    @java.lang.Override
    public boolean hasCertificateStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
     * @return The certificateStatus.
     */
    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult getCertificateStatus() {
      return certificateStatus_ == null ? Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance() : certificateStatus_;
    }
    /**
     * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
     */
    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder getCertificateStatusOrBuilder() {
      return certificateStatus_ == null ? Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance() : certificateStatus_;
    }

    public static final int SIGNATURETIMESTAMP_FIELD_NUMBER = 3;
    private Diadoc.Api.Proto.TimestampProtos.Timestamp signatureTimestamp_;
    /**
     * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
     * @return Whether the signatureTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasSignatureTimestamp() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
     * @return The signatureTimestamp.
     */
    @java.lang.Override
    public Diadoc.Api.Proto.TimestampProtos.Timestamp getSignatureTimestamp() {
      return signatureTimestamp_ == null ? Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : signatureTimestamp_;
    }
    /**
     * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
     */
    @java.lang.Override
    public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getSignatureTimestampOrBuilder() {
      return signatureTimestamp_ == null ? Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : signatureTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIsValid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCertificateStatus()) {
        if (!getCertificateStatus().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSignatureTimestamp()) {
        if (!getSignatureTimestamp().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, isValid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getCertificateStatus());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getSignatureTimestamp());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isValid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCertificateStatus());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSignatureTimestamp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult)) {
        return super.equals(obj);
      }
      Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult other = (Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult) obj;

      if (hasIsValid() != other.hasIsValid()) return false;
      if (hasIsValid()) {
        if (getIsValid()
            != other.getIsValid()) return false;
      }
      if (hasCertificateStatus() != other.hasCertificateStatus()) return false;
      if (hasCertificateStatus()) {
        if (!getCertificateStatus()
            .equals(other.getCertificateStatus())) return false;
      }
      if (hasSignatureTimestamp() != other.hasSignatureTimestamp()) return false;
      if (hasSignatureTimestamp()) {
        if (!getSignatureTimestamp()
            .equals(other.getSignatureTimestamp())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIsValid()) {
        hash = (37 * hash) + ISVALID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsValid());
      }
      if (hasCertificateStatus()) {
        hash = (37 * hash) + CERTIFICATESTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getCertificateStatus().hashCode();
      }
      if (hasSignatureTimestamp()) {
        hash = (37 * hash) + SIGNATURETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureTimestamp().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.SignatureVerificationResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.SignatureVerificationResult)
        Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_SignatureVerificationResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_SignatureVerificationResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.class, Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCertificateStatusFieldBuilder();
          getSignatureTimestampFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        isValid_ = false;
        certificateStatus_ = null;
        if (certificateStatusBuilder_ != null) {
          certificateStatusBuilder_.dispose();
          certificateStatusBuilder_ = null;
        }
        signatureTimestamp_ = null;
        if (signatureTimestampBuilder_ != null) {
          signatureTimestampBuilder_.dispose();
          signatureTimestampBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_SignatureVerificationResult_descriptor;
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult getDefaultInstanceForType() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.getDefaultInstance();
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult build() {
        Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult buildPartial() {
        Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult result = new Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.isValid_ = isValid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.certificateStatus_ = certificateStatusBuilder_ == null
              ? certificateStatus_
              : certificateStatusBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.signatureTimestamp_ = signatureTimestampBuilder_ == null
              ? signatureTimestamp_
              : signatureTimestampBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult) {
          return mergeFrom((Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult other) {
        if (other == Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult.getDefaultInstance()) return this;
        if (other.hasIsValid()) {
          setIsValid(other.getIsValid());
        }
        if (other.hasCertificateStatus()) {
          mergeCertificateStatus(other.getCertificateStatus());
        }
        if (other.hasSignatureTimestamp()) {
          mergeSignatureTimestamp(other.getSignatureTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasIsValid()) {
          return false;
        }
        if (hasCertificateStatus()) {
          if (!getCertificateStatus().isInitialized()) {
            return false;
          }
        }
        if (hasSignatureTimestamp()) {
          if (!getSignatureTimestamp().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                isValid_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getCertificateStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getSignatureTimestampFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean isValid_ ;
      /**
       * <code>required bool IsValid = 1;</code>
       * @return Whether the isValid field is set.
       */
      @java.lang.Override
      public boolean hasIsValid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool IsValid = 1;</code>
       * @return The isValid.
       */
      @java.lang.Override
      public boolean getIsValid() {
        return isValid_;
      }
      /**
       * <code>required bool IsValid = 1;</code>
       * @param value The isValid to set.
       * @return This builder for chaining.
       */
      public Builder setIsValid(boolean value) {

        isValid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required bool IsValid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsValid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isValid_ = false;
        onChanged();
        return this;
      }

      private Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult certificateStatus_;
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder> certificateStatusBuilder_;
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       * @return Whether the certificateStatus field is set.
       */
      public boolean hasCertificateStatus() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       * @return The certificateStatus.
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult getCertificateStatus() {
        if (certificateStatusBuilder_ == null) {
          return certificateStatus_ == null ? Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance() : certificateStatus_;
        } else {
          return certificateStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      public Builder setCertificateStatus(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult value) {
        if (certificateStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          certificateStatus_ = value;
        } else {
          certificateStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      public Builder setCertificateStatus(
          Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder builderForValue) {
        if (certificateStatusBuilder_ == null) {
          certificateStatus_ = builderForValue.build();
        } else {
          certificateStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      public Builder mergeCertificateStatus(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult value) {
        if (certificateStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            certificateStatus_ != null &&
            certificateStatus_ != Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance()) {
            getCertificateStatusBuilder().mergeFrom(value);
          } else {
            certificateStatus_ = value;
          }
        } else {
          certificateStatusBuilder_.mergeFrom(value);
        }
        if (certificateStatus_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      public Builder clearCertificateStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        certificateStatus_ = null;
        if (certificateStatusBuilder_ != null) {
          certificateStatusBuilder_.dispose();
          certificateStatusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder getCertificateStatusBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCertificateStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder getCertificateStatusOrBuilder() {
        if (certificateStatusBuilder_ != null) {
          return certificateStatusBuilder_.getMessageOrBuilder();
        } else {
          return certificateStatus_ == null ?
              Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance() : certificateStatus_;
        }
      }
      /**
       * <code>optional .Diadoc.Api.Proto.CertificateVerificationResult CertificateStatus = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder> 
          getCertificateStatusFieldBuilder() {
        if (certificateStatusBuilder_ == null) {
          certificateStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder>(
                  getCertificateStatus(),
                  getParentForChildren(),
                  isClean());
          certificateStatus_ = null;
        }
        return certificateStatusBuilder_;
      }

      private Diadoc.Api.Proto.TimestampProtos.Timestamp signatureTimestamp_;
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> signatureTimestampBuilder_;
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       * @return Whether the signatureTimestamp field is set.
       */
      public boolean hasSignatureTimestamp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       * @return The signatureTimestamp.
       */
      public Diadoc.Api.Proto.TimestampProtos.Timestamp getSignatureTimestamp() {
        if (signatureTimestampBuilder_ == null) {
          return signatureTimestamp_ == null ? Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : signatureTimestamp_;
        } else {
          return signatureTimestampBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      public Builder setSignatureTimestamp(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (signatureTimestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signatureTimestamp_ = value;
        } else {
          signatureTimestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      public Builder setSignatureTimestamp(
          Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder builderForValue) {
        if (signatureTimestampBuilder_ == null) {
          signatureTimestamp_ = builderForValue.build();
        } else {
          signatureTimestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      public Builder mergeSignatureTimestamp(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (signatureTimestampBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            signatureTimestamp_ != null &&
            signatureTimestamp_ != Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance()) {
            getSignatureTimestampBuilder().mergeFrom(value);
          } else {
            signatureTimestamp_ = value;
          }
        } else {
          signatureTimestampBuilder_.mergeFrom(value);
        }
        if (signatureTimestamp_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      public Builder clearSignatureTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signatureTimestamp_ = null;
        if (signatureTimestampBuilder_ != null) {
          signatureTimestampBuilder_.dispose();
          signatureTimestampBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      public Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder getSignatureTimestampBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSignatureTimestampFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getSignatureTimestampOrBuilder() {
        if (signatureTimestampBuilder_ != null) {
          return signatureTimestampBuilder_.getMessageOrBuilder();
        } else {
          return signatureTimestamp_ == null ?
              Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : signatureTimestamp_;
        }
      }
      /**
       * <code>optional .Diadoc.Api.Proto.Timestamp SignatureTimestamp = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> 
          getSignatureTimestampFieldBuilder() {
        if (signatureTimestampBuilder_ == null) {
          signatureTimestampBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder>(
                  getSignatureTimestamp(),
                  getParentForChildren(),
                  isClean());
          signatureTimestamp_ = null;
        }
        return signatureTimestampBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.SignatureVerificationResult)
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.SignatureVerificationResult)
    private static final Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult();
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignatureVerificationResult>
        PARSER = new com.google.protobuf.AbstractParser<SignatureVerificationResult>() {
      @java.lang.Override
      public SignatureVerificationResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SignatureVerificationResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignatureVerificationResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.SignatureVerificationResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateVerificationResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.CertificateVerificationResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool IsValid = 2;</code>
     * @return Whether the isValid field is set.
     */
    boolean hasIsValid();
    /**
     * <code>required bool IsValid = 2;</code>
     * @return The isValid.
     */
    boolean getIsValid();

    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    java.util.List<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement> 
        getCertificateChainList();
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement getCertificateChain(int index);
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    int getCertificateChainCount();
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    java.util.List<? extends Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder> 
        getCertificateChainOrBuilderList();
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder getCertificateChainOrBuilder(
        int index);

    /**
     * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
     * @return Whether the verificationTime field is set.
     */
    boolean hasVerificationTime();
    /**
     * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
     * @return The verificationTime.
     */
    Diadoc.Api.Proto.TimestampProtos.Timestamp getVerificationTime();
    /**
     * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
     */
    Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getVerificationTimeOrBuilder();
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.CertificateVerificationResult}
   */
  public static final class CertificateVerificationResult extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.CertificateVerificationResult)
      CertificateVerificationResultOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateVerificationResult.class.getName());
    }
    // Use CertificateVerificationResult.newBuilder() to construct.
    private CertificateVerificationResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateVerificationResult() {
      certificateChain_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateVerificationResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateVerificationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.class, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder.class);
    }

    private int bitField0_;
    public static final int ISVALID_FIELD_NUMBER = 2;
    private boolean isValid_ = false;
    /**
     * <code>required bool IsValid = 2;</code>
     * @return Whether the isValid field is set.
     */
    @java.lang.Override
    public boolean hasIsValid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required bool IsValid = 2;</code>
     * @return The isValid.
     */
    @java.lang.Override
    public boolean getIsValid() {
      return isValid_;
    }

    public static final int CERTIFICATECHAIN_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement> certificateChain_;
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    @java.lang.Override
    public java.util.List<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement> getCertificateChainList() {
      return certificateChain_;
    }
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder> 
        getCertificateChainOrBuilderList() {
      return certificateChain_;
    }
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    @java.lang.Override
    public int getCertificateChainCount() {
      return certificateChain_.size();
    }
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement getCertificateChain(int index) {
      return certificateChain_.get(index);
    }
    /**
     * <pre>
     * first element corresponds to signer certificate
     * </pre>
     *
     * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
     */
    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder getCertificateChainOrBuilder(
        int index) {
      return certificateChain_.get(index);
    }

    public static final int VERIFICATIONTIME_FIELD_NUMBER = 4;
    private Diadoc.Api.Proto.TimestampProtos.Timestamp verificationTime_;
    /**
     * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
     * @return Whether the verificationTime field is set.
     */
    @java.lang.Override
    public boolean hasVerificationTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
     * @return The verificationTime.
     */
    @java.lang.Override
    public Diadoc.Api.Proto.TimestampProtos.Timestamp getVerificationTime() {
      return verificationTime_ == null ? Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : verificationTime_;
    }
    /**
     * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
     */
    @java.lang.Override
    public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getVerificationTimeOrBuilder() {
      return verificationTime_ == null ? Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : verificationTime_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIsValid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVerificationTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCertificateChainCount(); i++) {
        if (!getCertificateChain(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getVerificationTime().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(2, isValid_);
      }
      for (int i = 0; i < certificateChain_.size(); i++) {
        output.writeMessage(3, certificateChain_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getVerificationTime());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isValid_);
      }
      for (int i = 0; i < certificateChain_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, certificateChain_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getVerificationTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult)) {
        return super.equals(obj);
      }
      Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult other = (Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult) obj;

      if (hasIsValid() != other.hasIsValid()) return false;
      if (hasIsValid()) {
        if (getIsValid()
            != other.getIsValid()) return false;
      }
      if (!getCertificateChainList()
          .equals(other.getCertificateChainList())) return false;
      if (hasVerificationTime() != other.hasVerificationTime()) return false;
      if (hasVerificationTime()) {
        if (!getVerificationTime()
            .equals(other.getVerificationTime())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIsValid()) {
        hash = (37 * hash) + ISVALID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsValid());
      }
      if (getCertificateChainCount() > 0) {
        hash = (37 * hash) + CERTIFICATECHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getCertificateChainList().hashCode();
      }
      if (hasVerificationTime()) {
        hash = (37 * hash) + VERIFICATIONTIME_FIELD_NUMBER;
        hash = (53 * hash) + getVerificationTime().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.CertificateVerificationResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.CertificateVerificationResult)
        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateVerificationResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateVerificationResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.class, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCertificateChainFieldBuilder();
          getVerificationTimeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        isValid_ = false;
        if (certificateChainBuilder_ == null) {
          certificateChain_ = java.util.Collections.emptyList();
        } else {
          certificateChain_ = null;
          certificateChainBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        verificationTime_ = null;
        if (verificationTimeBuilder_ != null) {
          verificationTimeBuilder_.dispose();
          verificationTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateVerificationResult_descriptor;
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult getDefaultInstanceForType() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance();
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult build() {
        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult buildPartial() {
        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult result = new Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult result) {
        if (certificateChainBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            certificateChain_ = java.util.Collections.unmodifiableList(certificateChain_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.certificateChain_ = certificateChain_;
        } else {
          result.certificateChain_ = certificateChainBuilder_.build();
        }
      }

      private void buildPartial0(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.isValid_ = isValid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.verificationTime_ = verificationTimeBuilder_ == null
              ? verificationTime_
              : verificationTimeBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult) {
          return mergeFrom((Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult other) {
        if (other == Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult.getDefaultInstance()) return this;
        if (other.hasIsValid()) {
          setIsValid(other.getIsValid());
        }
        if (certificateChainBuilder_ == null) {
          if (!other.certificateChain_.isEmpty()) {
            if (certificateChain_.isEmpty()) {
              certificateChain_ = other.certificateChain_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCertificateChainIsMutable();
              certificateChain_.addAll(other.certificateChain_);
            }
            onChanged();
          }
        } else {
          if (!other.certificateChain_.isEmpty()) {
            if (certificateChainBuilder_.isEmpty()) {
              certificateChainBuilder_.dispose();
              certificateChainBuilder_ = null;
              certificateChain_ = other.certificateChain_;
              bitField0_ = (bitField0_ & ~0x00000002);
              certificateChainBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCertificateChainFieldBuilder() : null;
            } else {
              certificateChainBuilder_.addAllMessages(other.certificateChain_);
            }
          }
        }
        if (other.hasVerificationTime()) {
          mergeVerificationTime(other.getVerificationTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasIsValid()) {
          return false;
        }
        if (!hasVerificationTime()) {
          return false;
        }
        for (int i = 0; i < getCertificateChainCount(); i++) {
          if (!getCertificateChain(i).isInitialized()) {
            return false;
          }
        }
        if (!getVerificationTime().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16: {
                isValid_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 16
              case 26: {
                Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement m =
                    input.readMessage(
                        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.parser(),
                        extensionRegistry);
                if (certificateChainBuilder_ == null) {
                  ensureCertificateChainIsMutable();
                  certificateChain_.add(m);
                } else {
                  certificateChainBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getVerificationTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean isValid_ ;
      /**
       * <code>required bool IsValid = 2;</code>
       * @return Whether the isValid field is set.
       */
      @java.lang.Override
      public boolean hasIsValid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool IsValid = 2;</code>
       * @return The isValid.
       */
      @java.lang.Override
      public boolean getIsValid() {
        return isValid_;
      }
      /**
       * <code>required bool IsValid = 2;</code>
       * @param value The isValid to set.
       * @return This builder for chaining.
       */
      public Builder setIsValid(boolean value) {

        isValid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required bool IsValid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsValid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isValid_ = false;
        onChanged();
        return this;
      }

      private java.util.List<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement> certificateChain_ =
        java.util.Collections.emptyList();
      private void ensureCertificateChainIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          certificateChain_ = new java.util.ArrayList<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement>(certificateChain_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder> certificateChainBuilder_;

      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public java.util.List<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement> getCertificateChainList() {
        if (certificateChainBuilder_ == null) {
          return java.util.Collections.unmodifiableList(certificateChain_);
        } else {
          return certificateChainBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public int getCertificateChainCount() {
        if (certificateChainBuilder_ == null) {
          return certificateChain_.size();
        } else {
          return certificateChainBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement getCertificateChain(int index) {
        if (certificateChainBuilder_ == null) {
          return certificateChain_.get(index);
        } else {
          return certificateChainBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder setCertificateChain(
          int index, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement value) {
        if (certificateChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCertificateChainIsMutable();
          certificateChain_.set(index, value);
          onChanged();
        } else {
          certificateChainBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder setCertificateChain(
          int index, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder builderForValue) {
        if (certificateChainBuilder_ == null) {
          ensureCertificateChainIsMutable();
          certificateChain_.set(index, builderForValue.build());
          onChanged();
        } else {
          certificateChainBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder addCertificateChain(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement value) {
        if (certificateChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCertificateChainIsMutable();
          certificateChain_.add(value);
          onChanged();
        } else {
          certificateChainBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder addCertificateChain(
          int index, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement value) {
        if (certificateChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCertificateChainIsMutable();
          certificateChain_.add(index, value);
          onChanged();
        } else {
          certificateChainBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder addCertificateChain(
          Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder builderForValue) {
        if (certificateChainBuilder_ == null) {
          ensureCertificateChainIsMutable();
          certificateChain_.add(builderForValue.build());
          onChanged();
        } else {
          certificateChainBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder addCertificateChain(
          int index, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder builderForValue) {
        if (certificateChainBuilder_ == null) {
          ensureCertificateChainIsMutable();
          certificateChain_.add(index, builderForValue.build());
          onChanged();
        } else {
          certificateChainBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder addAllCertificateChain(
          java.lang.Iterable<? extends Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement> values) {
        if (certificateChainBuilder_ == null) {
          ensureCertificateChainIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, certificateChain_);
          onChanged();
        } else {
          certificateChainBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder clearCertificateChain() {
        if (certificateChainBuilder_ == null) {
          certificateChain_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          certificateChainBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Builder removeCertificateChain(int index) {
        if (certificateChainBuilder_ == null) {
          ensureCertificateChainIsMutable();
          certificateChain_.remove(index);
          onChanged();
        } else {
          certificateChainBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder getCertificateChainBuilder(
          int index) {
        return getCertificateChainFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder getCertificateChainOrBuilder(
          int index) {
        if (certificateChainBuilder_ == null) {
          return certificateChain_.get(index);  } else {
          return certificateChainBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public java.util.List<? extends Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder> 
           getCertificateChainOrBuilderList() {
        if (certificateChainBuilder_ != null) {
          return certificateChainBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(certificateChain_);
        }
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder addCertificateChainBuilder() {
        return getCertificateChainFieldBuilder().addBuilder(
            Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.getDefaultInstance());
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder addCertificateChainBuilder(
          int index) {
        return getCertificateChainFieldBuilder().addBuilder(
            index, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.getDefaultInstance());
      }
      /**
       * <pre>
       * first element corresponds to signer certificate
       * </pre>
       *
       * <code>repeated .Diadoc.Api.Proto.CertificateChainElement CertificateChain = 3;</code>
       */
      public java.util.List<Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder> 
           getCertificateChainBuilderList() {
        return getCertificateChainFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder> 
          getCertificateChainFieldBuilder() {
        if (certificateChainBuilder_ == null) {
          certificateChainBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder>(
                  certificateChain_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          certificateChain_ = null;
        }
        return certificateChainBuilder_;
      }

      private Diadoc.Api.Proto.TimestampProtos.Timestamp verificationTime_;
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> verificationTimeBuilder_;
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       * @return Whether the verificationTime field is set.
       */
      public boolean hasVerificationTime() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       * @return The verificationTime.
       */
      public Diadoc.Api.Proto.TimestampProtos.Timestamp getVerificationTime() {
        if (verificationTimeBuilder_ == null) {
          return verificationTime_ == null ? Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : verificationTime_;
        } else {
          return verificationTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      public Builder setVerificationTime(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (verificationTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          verificationTime_ = value;
        } else {
          verificationTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      public Builder setVerificationTime(
          Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder builderForValue) {
        if (verificationTimeBuilder_ == null) {
          verificationTime_ = builderForValue.build();
        } else {
          verificationTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      public Builder mergeVerificationTime(Diadoc.Api.Proto.TimestampProtos.Timestamp value) {
        if (verificationTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            verificationTime_ != null &&
            verificationTime_ != Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance()) {
            getVerificationTimeBuilder().mergeFrom(value);
          } else {
            verificationTime_ = value;
          }
        } else {
          verificationTimeBuilder_.mergeFrom(value);
        }
        if (verificationTime_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      public Builder clearVerificationTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        verificationTime_ = null;
        if (verificationTimeBuilder_ != null) {
          verificationTimeBuilder_.dispose();
          verificationTimeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      public Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder getVerificationTimeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getVerificationTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      public Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder getVerificationTimeOrBuilder() {
        if (verificationTimeBuilder_ != null) {
          return verificationTimeBuilder_.getMessageOrBuilder();
        } else {
          return verificationTime_ == null ?
              Diadoc.Api.Proto.TimestampProtos.Timestamp.getDefaultInstance() : verificationTime_;
        }
      }
      /**
       * <code>required .Diadoc.Api.Proto.Timestamp VerificationTime = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder> 
          getVerificationTimeFieldBuilder() {
        if (verificationTimeBuilder_ == null) {
          verificationTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Diadoc.Api.Proto.TimestampProtos.Timestamp, Diadoc.Api.Proto.TimestampProtos.Timestamp.Builder, Diadoc.Api.Proto.TimestampProtos.TimestampOrBuilder>(
                  getVerificationTime(),
                  getParentForChildren(),
                  isClean());
          verificationTime_ = null;
        }
        return verificationTimeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.CertificateVerificationResult)
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.CertificateVerificationResult)
    private static final Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult();
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateVerificationResult>
        PARSER = new com.google.protobuf.AbstractParser<CertificateVerificationResult>() {
      @java.lang.Override
      public CertificateVerificationResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateVerificationResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateVerificationResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateVerificationResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateChainElementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Diadoc.Api.Proto.CertificateChainElement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * X509ChainStatusFlags value
     * </pre>
     *
     * <code>required int32 CertificateChainStatusFlags = 1;</code>
     * @return Whether the certificateChainStatusFlags field is set.
     */
    boolean hasCertificateChainStatusFlags();
    /**
     * <pre>
     * X509ChainStatusFlags value
     * </pre>
     *
     * <code>required int32 CertificateChainStatusFlags = 1;</code>
     * @return The certificateChainStatusFlags.
     */
    int getCertificateChainStatusFlags();

    /**
     * <code>required bytes DerCertificate = 2;</code>
     * @return Whether the derCertificate field is set.
     */
    boolean hasDerCertificate();
    /**
     * <code>required bytes DerCertificate = 2;</code>
     * @return The derCertificate.
     */
    com.google.protobuf.ByteString getDerCertificate();
  }
  /**
   * Protobuf type {@code Diadoc.Api.Proto.CertificateChainElement}
   */
  public static final class CertificateChainElement extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Diadoc.Api.Proto.CertificateChainElement)
      CertificateChainElementOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateChainElement.class.getName());
    }
    // Use CertificateChainElement.newBuilder() to construct.
    private CertificateChainElement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateChainElement() {
      derCertificate_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateChainElement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateChainElement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.class, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder.class);
    }

    private int bitField0_;
    public static final int CERTIFICATECHAINSTATUSFLAGS_FIELD_NUMBER = 1;
    private int certificateChainStatusFlags_ = 0;
    /**
     * <pre>
     * X509ChainStatusFlags value
     * </pre>
     *
     * <code>required int32 CertificateChainStatusFlags = 1;</code>
     * @return Whether the certificateChainStatusFlags field is set.
     */
    @java.lang.Override
    public boolean hasCertificateChainStatusFlags() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * X509ChainStatusFlags value
     * </pre>
     *
     * <code>required int32 CertificateChainStatusFlags = 1;</code>
     * @return The certificateChainStatusFlags.
     */
    @java.lang.Override
    public int getCertificateChainStatusFlags() {
      return certificateChainStatusFlags_;
    }

    public static final int DERCERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString derCertificate_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>required bytes DerCertificate = 2;</code>
     * @return Whether the derCertificate field is set.
     */
    @java.lang.Override
    public boolean hasDerCertificate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required bytes DerCertificate = 2;</code>
     * @return The derCertificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDerCertificate() {
      return derCertificate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCertificateChainStatusFlags()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDerCertificate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, certificateChainStatusFlags_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, derCertificate_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, certificateChainStatusFlags_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, derCertificate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement)) {
        return super.equals(obj);
      }
      Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement other = (Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement) obj;

      if (hasCertificateChainStatusFlags() != other.hasCertificateChainStatusFlags()) return false;
      if (hasCertificateChainStatusFlags()) {
        if (getCertificateChainStatusFlags()
            != other.getCertificateChainStatusFlags()) return false;
      }
      if (hasDerCertificate() != other.hasDerCertificate()) return false;
      if (hasDerCertificate()) {
        if (!getDerCertificate()
            .equals(other.getDerCertificate())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCertificateChainStatusFlags()) {
        hash = (37 * hash) + CERTIFICATECHAINSTATUSFLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getCertificateChainStatusFlags();
      }
      if (hasDerCertificate()) {
        hash = (37 * hash) + DERCERTIFICATE_FIELD_NUMBER;
        hash = (53 * hash) + getDerCertificate().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Diadoc.Api.Proto.CertificateChainElement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Diadoc.Api.Proto.CertificateChainElement)
        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateChainElement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateChainElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.class, Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.Builder.class);
      }

      // Construct using Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        certificateChainStatusFlags_ = 0;
        derCertificate_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.internal_static_Diadoc_Api_Proto_CertificateChainElement_descriptor;
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement getDefaultInstanceForType() {
        return Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.getDefaultInstance();
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement build() {
        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement buildPartial() {
        Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement result = new Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.certificateChainStatusFlags_ = certificateChainStatusFlags_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.derCertificate_ = derCertificate_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement) {
          return mergeFrom((Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement other) {
        if (other == Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement.getDefaultInstance()) return this;
        if (other.hasCertificateChainStatusFlags()) {
          setCertificateChainStatusFlags(other.getCertificateChainStatusFlags());
        }
        if (other.hasDerCertificate()) {
          setDerCertificate(other.getDerCertificate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCertificateChainStatusFlags()) {
          return false;
        }
        if (!hasDerCertificate()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                certificateChainStatusFlags_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                derCertificate_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int certificateChainStatusFlags_ ;
      /**
       * <pre>
       * X509ChainStatusFlags value
       * </pre>
       *
       * <code>required int32 CertificateChainStatusFlags = 1;</code>
       * @return Whether the certificateChainStatusFlags field is set.
       */
      @java.lang.Override
      public boolean hasCertificateChainStatusFlags() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * X509ChainStatusFlags value
       * </pre>
       *
       * <code>required int32 CertificateChainStatusFlags = 1;</code>
       * @return The certificateChainStatusFlags.
       */
      @java.lang.Override
      public int getCertificateChainStatusFlags() {
        return certificateChainStatusFlags_;
      }
      /**
       * <pre>
       * X509ChainStatusFlags value
       * </pre>
       *
       * <code>required int32 CertificateChainStatusFlags = 1;</code>
       * @param value The certificateChainStatusFlags to set.
       * @return This builder for chaining.
       */
      public Builder setCertificateChainStatusFlags(int value) {

        certificateChainStatusFlags_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * X509ChainStatusFlags value
       * </pre>
       *
       * <code>required int32 CertificateChainStatusFlags = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCertificateChainStatusFlags() {
        bitField0_ = (bitField0_ & ~0x00000001);
        certificateChainStatusFlags_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString derCertificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes DerCertificate = 2;</code>
       * @return Whether the derCertificate field is set.
       */
      @java.lang.Override
      public boolean hasDerCertificate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required bytes DerCertificate = 2;</code>
       * @return The derCertificate.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDerCertificate() {
        return derCertificate_;
      }
      /**
       * <code>required bytes DerCertificate = 2;</code>
       * @param value The derCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setDerCertificate(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        derCertificate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes DerCertificate = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDerCertificate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        derCertificate_ = getDefaultInstance().getDerCertificate();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Diadoc.Api.Proto.CertificateChainElement)
    }

    // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.CertificateChainElement)
    private static final Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement();
    }

    public static Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateChainElement>
        PARSER = new com.google.protobuf.AbstractParser<CertificateChainElement>() {
      @java.lang.Override
      public CertificateChainElement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateChainElement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateChainElement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Diadoc.Api.Proto.SignatureVerificationResultProtos.CertificateChainElement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_SignatureVerificationResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_SignatureVerificationResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_CertificateVerificationResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_CertificateVerificationResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Diadoc_Api_Proto_CertificateChainElement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Diadoc_Api_Proto_CertificateChainElement_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!SignatureVerificationResult.proto\022\020Dia" +
      "doc.Api.Proto\032\017Timestamp.proto\"\263\001\n\033Signa" +
      "tureVerificationResult\022\017\n\007IsValid\030\001 \002(\010\022" +
      "J\n\021CertificateStatus\030\002 \001(\0132/.Diadoc.Api." +
      "Proto.CertificateVerificationResult\0227\n\022S" +
      "ignatureTimestamp\030\003 \001(\0132\033.Diadoc.Api.Pro" +
      "to.Timestamp\"\254\001\n\035CertificateVerification" +
      "Result\022\017\n\007IsValid\030\002 \002(\010\022C\n\020CertificateCh" +
      "ain\030\003 \003(\0132).Diadoc.Api.Proto.Certificate" +
      "ChainElement\0225\n\020VerificationTime\030\004 \002(\0132\033" +
      ".Diadoc.Api.Proto.Timestamp\"V\n\027Certifica" +
      "teChainElement\022#\n\033CertificateChainStatus" +
      "Flags\030\001 \002(\005\022\026\n\016DerCertificate\030\002 \002(\014B#B!S" +
      "ignatureVerificationResultProtos"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Diadoc.Api.Proto.TimestampProtos.getDescriptor(),
        });
    internal_static_Diadoc_Api_Proto_SignatureVerificationResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Diadoc_Api_Proto_SignatureVerificationResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_SignatureVerificationResult_descriptor,
        new java.lang.String[] { "IsValid", "CertificateStatus", "SignatureTimestamp", });
    internal_static_Diadoc_Api_Proto_CertificateVerificationResult_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Diadoc_Api_Proto_CertificateVerificationResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_CertificateVerificationResult_descriptor,
        new java.lang.String[] { "IsValid", "CertificateChain", "VerificationTime", });
    internal_static_Diadoc_Api_Proto_CertificateChainElement_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Diadoc_Api_Proto_CertificateChainElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Diadoc_Api_Proto_CertificateChainElement_descriptor,
        new java.lang.String[] { "CertificateChainStatusFlags", "DerCertificate", });
    descriptor.resolveAllFeaturesImmutable();
    Diadoc.Api.Proto.TimestampProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
